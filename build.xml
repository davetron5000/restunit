<project name="restunit" default="compile" basedir=".">

    <property environment="env" />
    <property file="build.properties" />

    <!-- PATHS -->

    <path id="compile.classpath">
        <fileset dir="${rt.lib.dir}"> <include name="*.jar"/> </fileset>
        <fileset dir="${test.lib.dir}"> <include name="*.jar"/> </fileset>
    </path>

    <path id="test.compile.classpath">
        <path refid="compile.classpath" />
        <pathelement location="${classes.dir}" />
    </path>

    <path id="test.classpath">
        <path refid="test.compile.classpath" />
        <pathelement location="${test.classes.dir}" />
    </path>

    <!-- TASKDEFS -->

    <taskdef resource="checkstyletask.properties"
        classpath="${test.lib.dir}/checkstyle-all-4.4.jar" />

    <taskdef name="testng" 
        classpathref="compile.classpath"
        classname="org.testng.TestNGAntTask" />

    <!-- TARGETS -->

    <target name="test" depends="checkstyle,deploy.test.war"
        description="Runs tests">
        <delete file="${testng.failed.xml}" />
        <testng
            sourcedir="${test.java.src.dir}"
            classpathref="test.classpath"
            parallel="tests"
            threadCount="10"
            outputdir="${test.output.dir}"
            >
            <jvmarg value="-Djava.util.logging.config.file=${conf.dir}/jdk.logging.properties" />
            <classfileset dir="${test.classes.dir}" />
        </testng>
        <ant target="stop.winstone" />
    </target>

    <target name="test.failed" 
        description="Runs Failed Tests"
        depends="compile.test,deploy.test.war">
        <testng
            sourcedir="${test.java.src.dir}"
            classpathref="test.classpath"
            outputdir="${test.output.dir}"
            >
            <xmlfileset dir="${test.output.dir}" includes="testng-failed.xml"/>
            <jvmarg value="-Djava.util.logging.config.file=${conf.dir}/jdk.logging.properties" />
        </testng>
        <ant target="stop.winstone" />
    </target>

    <target name="compile" 
        description="Compiles all code">
        <mkdir dir="${classes.dir}" />
        <depend srcdir="${java.src.dir}"
            destdir="${classes.dir}"
            cache="${build.dir}/depcache"
            closure="yes"/>
        <javac destdir="${classes.dir}"
            classpathref="compile.classpath"
            debug="on">
            <src path="${java.src.dir}"/>
            <compilerarg line="-Xlint -Xlint:-serial -Xlint:-path" />
        </javac>
        <copy todir="${classes.dir}" file="${conf.dir}/log4j.properties" />
    </target>

    <target name="clean"
        description="Remove all generated targets">
        <delete dir="${build.dir}" />
    </target>

    <target name="javadoc"
        description="Generates Javadoc"
        >
        <javadoc sourcepath="${java.src.dir}"
            destdir="${javadoc.dir}"
            classpathref="compile.classpath">
            <link href="http://java.sun.com/j2se/1.5/docs/api/" />
            <link href="http://java.sun.com/javaee/5/docs/api/" />
            <link href="http://logging.apache.org/log4j/1.2/apidocs/" />
            <link href="http://commons.apache.org/logging/apidocs/" />
        </javadoc>
    </target>

    <target name="publish.javadoc" depends="javadoc"
        description="Publishes javadoc to naildrivin5.com">
        <scp verbose="true" sftp="true"
            todir="davec@www.naildrivin5.com:/home/webadmin/naildrivin5.com/html/restunit/javadoc/" keyfile="/Users/davec/.ssh/id_dsa" passphrase="">
            <fileset dir="${javadoc.dir}" />
        </scp>
    </target>

    <!-- SUB TARGETS -->

    <!-- compiles test code -->
    <target name="compile.test" depends="compile">
        <mkdir dir="${test.classes.dir}" />
        <depend srcdir="${test.java.src.dir}"
            destdir="${test.classes.dir}"
            cache="${build.dir}/depcache"
            closure="yes"/>
        <javac destdir="${test.classes.dir}"
            classpathref="test.compile.classpath"
            debug="on">
            <src path="${test.java.src.dir}"/>
            <compilerarg line="-Xlint -Xlint:-serial -Xlint:-path" />
        </javac>
    </target>

    <target name="checkstyle"
        >
        <checkstyle 
            config="${conf.dir}/checkstyle.xml"
            classpathref="compile.classpath"
            >
            <property key="checkstyle.header.file" value="${conf.dir}/java.header" />
            <fileset dir="${java.src.dir}" includes="**/*.java" />
        </checkstyle>
    </target>

    <target name="test.war" depends="compile.test">
        <copy tofile="${build.dir}/log4j.properties" file="${conf.dir}/servlet.log4j.properties" />
        <war
            destfile="${test.war}"
            update="yes"
            duplicate="fail"
            webxml="${test.java.src.dir}/com/gliffy/test/restunit/servlet/web.xml">
            <lib dir="${rt.lib.dir}" />
            <classes dir="${test.classes.dir}">
                <include name="**/*.class" />
            </classes>
            <classes dir="${build.dir}">
                <include name="log4j.properties" />
            </classes>
        </war>
    </target>

    <!-- deploy the test war and start Winstone -->
    <target name="deploy.test.war" depends="test.war">
        <java jar="${test.lib.dir}/winstone-0.9.10.jar"
            fork="true"
            spawn="true" >
            <arg line="--warfile=${test.war} --logfile=winstone.log --httpPort=${winstone.httpPort} --controlPort=${winstone.controlPort} -ajp13Port=-1" />
        </java>
        <sleep seconds="1" />
    </target>

    <!-- Stop the winstone servlet container -->
    <target name="stop.winstone">
        <echo message="Stopping Winstone servlet container" />
        <java classname="winstone.tools.WinstoneControl" classpath="${test.lib.dir}/winstone-0.9.10.jar">
            <arg line="shutdown --host=localhost --controlPort=${winstone.controlPort}" />
        </java>
    </target>

</project>
